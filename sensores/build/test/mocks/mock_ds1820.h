/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_DS1820_H
#define _MOCK_DS1820_H

#include "ds1820.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_ds1820_Init(void);
void mock_ds1820_Destroy(void);
void mock_ds1820_Verify(void);




#define unassignedProbe_IgnoreAndReturn(cmock_retval) unassignedProbe_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void unassignedProbe_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int8_t cmock_to_return);
#define unassignedProbe_ExpectAndReturn(ds1_DATA_PIN, cmock_retval) unassignedProbe_CMockExpectAndReturn(__LINE__, ds1_DATA_PIN, cmock_retval)
void unassignedProbe_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int8_t ds1_DATA_PIN, int8_t cmock_to_return);
typedef int8_t (* CMOCK_unassignedProbe_CALLBACK)(int8_t ds1_DATA_PIN, int cmock_num_calls);
void unassignedProbe_StubWithCallback(CMOCK_unassignedProbe_CALLBACK Callback);
#define convertTemperature_Ignore() convertTemperature_CMockIgnore()
void convertTemperature_CMockIgnore(void);
#define convertTemperature_Expect(idSensor) convertTemperature_CMockExpect(__LINE__, idSensor)
void convertTemperature_CMockExpect(UNITY_LINE_TYPE cmock_line, int8_t idSensor);
typedef void (* CMOCK_convertTemperature_CALLBACK)(int8_t idSensor, int cmock_num_calls);
void convertTemperature_StubWithCallback(CMOCK_convertTemperature_CALLBACK Callback);
#define temperature_IgnoreAndReturn(cmock_retval) temperature_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void temperature_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int8_t cmock_to_return);
#define temperature_ExpectAndReturn(idSensor, cmock_retval) temperature_CMockExpectAndReturn(__LINE__, idSensor, cmock_retval)
void temperature_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int8_t idSensor, int8_t cmock_to_return);
typedef int8_t (* CMOCK_temperature_CALLBACK)(int8_t idSensor, int cmock_num_calls);
void temperature_StubWithCallback(CMOCK_temperature_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
